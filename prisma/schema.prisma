// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(cuid())
  name       String
  email      String    @unique
  username   String    @unique
  password   String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  Session    Session[]
  Files      Files[]
  Folders    Folders[]

  @@map("users")
}

model Session {
  id           String    @id @default(cuid())
  sessionToken String    @unique @map("session_token")
  userId       String?   @map("user_id")
  access_token String?   @db.Text
  remote_ip    String?   @db.Text
  user_agent   String?   @db.Text
  expires      Int
  User         User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
  created_at   DateTime? @default(now())
  updated_at   DateTime? @default(now())

  @@map("sessions")
}

model Buckets {
  id          String    @id @default(cuid())
  user_id     String
  bucket_name String
  created_at  DateTime? @default(now())
  updated_at  DateTime? @default(now())
  Folders     Folders[]
  Files       Files[]

  @@map("buckets")
}

model Folders {
  id           String    @id @default(cuid())
  bucket_id    String
  folder_id    String? // Campo opcional que aponta para a pasta pai (pasta "mãe")
  folder_name  String
  user_id      String
  created_at   DateTime? @default(now())
  updated_at   DateTime? @default(now())
  User         User      @relation(fields: [user_id], references: [id])
  Buckets      Buckets   @relation(fields: [bucket_id], references: [id])
  Files        Files[] // Relação com arquivos
  Subfolders   Folders[] @relation("FolderSubfolders") // Relação de subpastas (pasta mãe -> subpastas)
  ParentFolder Folders?  @relation("FolderSubfolders", fields: [folder_id], references: [id]) // Relaciona com a pasta mãe (subpasta -> pasta mãe)

  @@map("folders")
}

model Files {
  id         String    @id @default(cuid())
  user_id    String
  bucket_id  String
  folder_id  String?
  file_name  String
  file_hash  String
  file_size  Int
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  User       User      @relation(fields: [user_id], references: [id])
  Buckets    Buckets   @relation(fields: [bucket_id], references: [id])
  Folders    Folders?  @relation(fields: [folder_id], references: [id])

  @@map("files")
}
